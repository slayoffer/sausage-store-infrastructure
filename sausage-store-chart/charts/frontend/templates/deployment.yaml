---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}"
  labels:
    app.kubernetes.io/name: sausage-{{ .Chart.Name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: "{{ .Chart.Name }}"
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"
    app: "{{ .Chart.Name }}"
spec:
  revisionHistoryLimit: 15
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            preference:
              matchExpressions:
              - key: application
                operator: In
                values:
                - front
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image }}:{{ .Values.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          volumeMounts:
            - name: "{{ .Chart.Name }}-cfgmap"
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
          ports:
            - name: "{{ .Chart.Name }}"
              containerPort: {{ .Values.containerPort }}
          startupProbe:
            httpGet:
              path: /
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 15
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 15
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
      volumes:
        - name: "{{ .Chart.Name }}-cfgmap"
          configMap:
            name: "{{ .Chart.Name }}-cfgmap"
            items:
              - key: nginx.conf
                path: nginx.conf
      imagePullSecrets:
        - name: docker-config-secret
